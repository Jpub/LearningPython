3.3.0 (v3.3.0:bd8afb90ebf2, Sep 29 2012, 10:57:17) [MSC v.1600 64 bit (AMD64)]
0.5017  ['[x ** 2 for x in range(1000)]']
0.5636  ['res=[]\nfor x in range(1000): res.append(x ** 2)']
0.6005  ['list(map(lambda x: x ** 2, range(1000)))']
0.5392  ['list(x ** 2 for x in range(1000))']
1.5258  ["[f(x) for x in 'spam' * 2500]"]
2.0554  ["res=[]\nfor x in 'spam' * 2500:\n\tres.append(f(x))"]
0.0012  ['for i in range(len(L)): L[i] += 1']
0.0014  ['i=0\nwhile i < len(L):\n\tL[i] += 1\n\ti += 1']



2.7.3 (default, Apr 10 2012, 23:24:47) [MSC v.1500 64 bit (AMD64)]
0.0701  ['[x ** 2 for x in range(1000)]']
0.1279  ['res=[]\nfor x in range(1000): res.append(x ** 2)']
0.1662  ['(map(lambda x: x ** 2, range(1000)))']
0.0968  ['list(x ** 2 for x in range(1000))']
1.2358  ["[f(x) for x in 'spam' * 2500]"]
1.8213  ["res=[]\nfor x in 'spam' * 2500:\n\tres.append(f(x))"]
0.0008  ['for i in range(len(L)): L[i] += 1']
0.0010  ['i=0\nwhile i < len(L):\n\tL[i] += 1\n\ti += 1']



2.7.2 (341e1e3821ff, Jun 07 2012, 15:43:00)
[PyPy 1.9.0 with MSC v.1500 32 bit]
0.0059  ['[x ** 2 for x in range(1000)]']
0.0102  ['res=[]\nfor x in range(1000): res.append(x ** 2)']
0.0098  ['(map(lambda x: x ** 2, range(1000)))']
0.0159  ['list(x ** 2 for x in range(1000))']
0.1029  ["[f(x) for x in 'spam' * 2500]"]
0.2047  ["res=[]\nfor x in 'spam' * 2500:\n\tres.append(f(x))"]
0.0001  ['for i in range(len(L)): L[i] += 1']
0.0000  ['i=0\nwhile i < len(L):\n\tL[i] += 1\n\ti += 1']
